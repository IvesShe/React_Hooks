{"version":3,"sources":["components/Hooks/index.jsx","components/Advance/index.jsx","components/Advance/ReducerDemo/index.jsx","components/Advance/ShowArea/Color.jsx","components/Advance/ShowArea/Buttons.jsx","components/Advance/ShowArea/Show.jsx","components/Advance/ShowArea/index.jsx","components/Advance/Memo/index.jsx","components/Advance/Ref/index.jsx","App.jsx","index.js"],"names":["Hooks","React","useState","count","setCount","name","setName","myRef","useRef","useEffect","timer","setInterval","clearInterval","onClick","ReactDom","unmountComponentAtNode","document","getElementById","type","ref","alert","current","value","CountContext","createContext","Counter","useContext","Index","console","log","List","Advance","Provider","to","path","exact","component","ReducerDemo","useReducer","state","action","dispatch","ColorContext","UPDATE_COLOR","reducer","color","Color","props","children","Buttons","Show","style","ShowArea","Memo","person01","setPerson01","person02","setPerson02","Date","getTime","ChildComponent","actionPerson01","useMemo","Ref","inputE1","text","setText","textRef","onChange","e","target","App","x","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.94d2e44a.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\n\n// 類式組件\n// class Hooks extends React.Component {\n\n//     state = {count:0};\n\n//     myRef = React.createRef();\n\n//     add = ()=>{\n//         // setState第一種寫法(對象式的)\n//         //const {count} = this.state\n//         //this.setState({count:count+1});\n//         // this.setState({count:count+1},()=>{\n//         //     console.log(this.state.count);\n//         // });\n//         //this.setState({count:this.state.count+1});\n\n//         // setState第二種寫法\n//         this.setState(state => ({count:state.count+1}));\n//         // this.setState((state,props) => {\n//         //     console.log(state,props);\n//         //     return {count:state.count+1}\n//         // });\n//         // this.setState(state => ({count:state.count+1}),()=>{\n//         //     console.log(this.state.count);\n//         // });\n//     }\n\n//     unmount = ()=>{\n//         ReactDom.unmountComponentAtNode(document.getElementById('root'));\n//     }\n\n//     show = ()=>{\n//         alert(this.myRef.current.value);\n//     }\n\n//     componentDidMount(){\n//         this.timer = setInterval(()=>{\n//             this.setState(state => ({count:state.count+1}));\n//         },1000);\n//     }\n\n//     componentWillUnmount(){\n//         clearInterval(this.timer);\n//     }\n\n//     render() {\n//         return (\n//             <div>\n                \n//                 <h2>當前求和為 {this.state.count} </h2>\n//                 <button onClick={this.add} >點我+1</button>\n//                 <button onClick={this.unmount} >卸載組件</button>\n//                 <hr/>\n//                 <input type=\"text\" ref={this.myRef} />\n//                 <button onClick={this.show} >點擊提示數據</button>\n//             </div>\n//         )\n//     }\n// }\n\n// 函數式組件\nfunction Hooks() {\n    //console.log('@Hooks');\n\n    // useState傳入的初始值，React底層處理過了，只有在第一次會被調用 \n    const [count,setCount] = React.useState(0);\n    const [name,setName] = React.useState('Tom');\n    const myRef = React.useRef();\n    //console.log(count,setCount);\n\n    // 加的回調\n    function add(){\n        // 第一種寫法\n        // setCount(count+1);\n\n        // 第二種寫法\n        setCount(count => count+1);\n    }\n\n    // 卸載組件的回調\n    function unmount(){\n        ReactDom.unmountComponentAtNode(document.getElementById('root'));\n    }\n\n    // 提示輸入的回調\n    function show(){\n        alert(myRef.current.value);\n    }\n\n    function changeName(){\n        // 第一種寫法\n        setName('Jack');\n\n        // 第二種寫法\n        //setCount(count => count+1);\n    }\n\n    // 第二個參數傳入[]，使useEffect相當於componentDidMount()\n    // 第二個參數有監測傳入參數的意思，不填的話全部都監測，則每次更新都會監測到\n    // 寫[]代表誰也不監測\n    React.useEffect(()=>{\n        //console.log('@');\n        let timer = setInterval(()=>{\n            setCount(count=>count+1);\n        },1000);\n\n        // React.useEffect返回的函數相當於ReactDom.unmountComponentAtNode\n        return ()=>{\n            clearInterval(timer);\n        }\n    },[])\n    // },[count,name])\n\n    return (\n        <div>\n            <h2>我是Hooks組件</h2>\n            <h2>當前求和為 {count} </h2>\n            <h2>我的名字是 {name} </h2>\n            <button onClick={add} >點我+1</button>\n            <button onClick={changeName} >點我改名</button>\n            <button onClick={unmount} >卸載組件</button>\n            <br/>\n            <br/>\n            <input type=\"text\" ref={myRef} />\n            <button onClick={show} >點擊提示數據</button>\n        </div>\n    )\n}\n\nexport default Hooks\n","import React from 'react'\n\nimport {\n    useState,\n    useEffect,\n    createContext,\n    useContext,\n    useReducer\n} from 'react'  \n\nimport {BrowserRouter as Router ,Route,Link} from 'react-router-dom'\n\n\n\n// 創建Context\nconst CountContext = createContext();\n\nfunction Counter(){\n    // 使用Context\n    let count = useContext(CountContext);\n    return (<h2>{count}</h2>)\n}\n\nfunction Index(){\n    useEffect(()=>{\n        console.log(`userEffect => Index `);\n\n        return ()=>{\n            console.log(`userEffect => Index Exit`)\n        }\n    },[])\n    return <h2>ives.com</h2>\n}\n\nfunction List(){\n    useEffect(()=>{\n        console.log(`userEffect => List `);\n    })\n    return <h2>List Page</h2>\n}\n\nexport default function Advance() {\n\n    // 數組解構\n    const [count,setCount] = useState(0);\n    // const [age,setAge] = useState(18);\n    // const [sex,setSex] = useState('男');\n    // const [work,setWork] = useState('前端程序員');\n\n    useEffect(()=>{\n        console.log(`userEffect => You clicked ${count} times `);\n\n        return ()=>{\n            console.log('=====================');\n        }\n    },[count])\n\n    return (\n        <div>\n            \b<h2>我是Advance組件</h2>\n            <p>You Clicked {count} times </p>\n            <button onClick={()=>{setCount(count+1)}} >Click me</button>\n\n            {/* 傳入Context */}\n            <CountContext.Provider value={count}>\n                <Counter/>\n            </CountContext.Provider>\n            {/* <p>ives今年∶ {age} 歲  </p>\n            <p>性別∶ {sex} </p>\n            <p>工作是∶ {work} </p> */}\n\n            <Router>\n                <ul>\n                    <li><Link to=\"/\">首頁</Link></li>\n                    <li><Link to=\"/list/\">列表</Link></li>\n                </ul>\n                <Route path=\"/\" exact component={Index} />\n                <Route path=\"/list\" component={List} />\n\n            </Router>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nimport {\n    useReducer\n} from 'react'  \n\nexport default function ReducerDemo(){\n    const [count,dispatch] = useReducer((state,action)=>{\n        switch(action){\n            case 'add':\n                return state+1 \n            case 'sub':\n                return state-1 \n            default:\n                return state\n        }\n    },0)\n\n    // console.log(count,dispatch);\n    return(\n        <div>\n            <h2>我是ReducerDemo組件</h2>\n            <h2>現在的分數是{count}</h2>\n            <button onClick={()=>{dispatch('add')}} >Increment</button>\n            <button onClick={()=>{dispatch('sub')}} >Decrement</button>\n        </div>\n    )\n}\n\n","import React,{createContext,useReducer} from 'react'\n\nexport const ColorContext = createContext({})\n\nexport const UPDATE_COLOR = \"UPDATE_COLOR\"\n\nconst reducer = (state,action) =>{\n    switch(action.type){\n        case UPDATE_COLOR:\n            return action.color\n        default:\n            return state\n    }\n}\n\nexport const Color  = props =>{\n\n    const [color,dispatch] = useReducer(reducer,'blue');\n\n    return (\n        <ColorContext.Provider value={{color,dispatch}}>\n            {props.children}\n        </ColorContext.Provider>\n    )\n}\n","import React,{useContext} from 'react'\nimport {ColorContext,UPDATE_COLOR} from './Color'\n\nexport default function Buttons() {\n\n    const {dispatch} = useContext(ColorContext)\n\n    return (\n        <div>\n            <button onClick={()=>{dispatch({type:UPDATE_COLOR,color:'red'})}} >紅色</button>\n            <button onClick={()=>{dispatch({type:UPDATE_COLOR,color:'yellow'})}}>黃色</button>\n        </div>\n    )\n}\n","import React,{useContext} from 'react'\nimport {ColorContext} from './Color'\n\nexport default function Show() {\n    const {color} = useContext(ColorContext);\n    return (\n        <div style={{color:color}}>\n            字體顏色為blue\n        </div>\n    )\n}\n","import React from 'react'\nimport Buttons from './Buttons'\nimport {Color} from './Color'\nimport Show from './Show'\n\nexport default function ShowArea() {\n    return (\n        <div>\n            <h2>我是ShowArea組件</h2>\n            <Color>\n                <Show />\n                <Buttons />\n            </Color>\n        </div>\n    )\n}\n","import React,{useState,useMemo} from 'react'\n\n\n\nexport default function Memo() {\n\n    const [person01,setPerson01] = useState('Person01 Ready')\n    const [person02,setPerson02] = useState('Person02 Ready')\n\n    return (\n        <div>\n            <h2>我是Memo組件</h2>\n            <button onClick={()=>{setPerson01(new Date().getTime())}} >Person01</button>\n            <button onClick={()=>{setPerson02(new Date().getTime()+', person02 gogo')}} >Person02</button>\n\n            {/* 注意這邊傳入的name及children */}\n            <ChildComponent name={person01}>{person02}</ChildComponent>\n        </div>\n    )\n}\n\nfunction ChildComponent({name,children}) {\n\n    function changePerson01(){\n        console.log('person01 go');\n        return name+', person01 go'\n    }\n\n    // 當person01發生變化時，才會呼叫\n    const actionPerson01 = useMemo(()=>changePerson01(name),[name])\n\n    return (\n        <div>\n            {/* 透過函數產生第一行 */}\n            <div>{actionPerson01}</div>\n            {/* 直接將children秀出 */}\n            <div>{children}</div>\n        </div>\n    )\n}","import React,{useRef,useState,useEffect} from 'react'\n\nexport default function Ref() {\n\n    const inputE1 = useRef(null)\n\n    const onButtonClick = ()=>{\n        inputE1.current.value = \"Hello,ives\";\n        console.log(inputE1);\n    }\n\n    const [text,setText] = useState('ives')\n    const textRef = useRef();\n\n    useEffect(()=>{\n        textRef.current = text;\n        console.log('textRef.current:',textRef.current);\n    })\n\n    return (\n        <div>\n            <h2>我是Ref組件</h2>\n            <input ref={inputE1} type=\"text\"/>\n            <button onClick={onButtonClick} >在input上展示文字</button>\n            <br/>\n            <br/>\n            <input value={text} onChange={(e)=>{setText(e.target.value)}} />\n        </div>\n    )\n}\n","import React, { Component,Fragment } from 'react'\nimport Hooks from './components/Hooks'\nimport Advance from './components/Advance'\nimport ReducerDemo from './components/Advance/ReducerDemo'\n\nimport ShowArea from './components/Advance/ShowArea'\n\nimport Memo from './components/Advance/Memo'\n\nimport Ref from './components/Advance/Ref'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Hooks x={101} />\n        <hr/>\n        <Advance />\n        <hr />\n        <ReducerDemo />\n        <hr />\n        <ShowArea />\n        <hr />\n        <Memo />\n        <hr />\n        <Ref />\n      </Fragment>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}